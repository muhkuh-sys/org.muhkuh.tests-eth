top = "."
out = "build"
APPNAME = "components"

def build(bld):

    use_toolchain = "gccarmemb"

    # -----------------------------------------------------------------
    # Ethernet MAC

    # header component, target independent
    bld.sdkcomponent(
        name            = "hal_ethmac_sdk",
        export_includes = ["hal_ethmac/Includes"],
        public_includes = ["hal_ethmac/Includes"],
        displaygroup    = APPNAME,
    )

    # netX100, netX500
    bld.stlib(
        target          = "hal_ethmac_netx100",
        name            = "hal_ethmac_netx100",
        platform        = "netx100",
        toolchain       = use_toolchain,
        description     = "Ethernet MAC Library netX100 ",
        source          = ["hal_ethmac/netx100/Sources/hal_ethmac.c",
                           "hal_ethmac/netx100/Sources/rpu_ethmac0.c",
                           "hal_ethmac/netx100/Sources/rpu_ethmac1.c",
                           "hal_ethmac/netx100/Sources/rpu_ethmac2.c",
                           "hal_ethmac/netx100/Sources/rpu_ethmac3.c",
                           "hal_ethmac/netx100/Sources/tpu_ethmac0.c",
                           "hal_ethmac/netx100/Sources/tpu_ethmac1.c",
                           "hal_ethmac/netx100/Sources/tpu_ethmac2.c",
                           "hal_ethmac/netx100/Sources/tpu_ethmac3.c",
                           "hal_ethmac/netx100/Sources/xpec_ethmac0.c",
                           "hal_ethmac/netx100/Sources/xpec_ethmac1.c",
                           "hal_ethmac/netx100/Sources/xpec_ethmac2.c",
                           "hal_ethmac/netx100/Sources/xpec_ethmac3.c",
                          ],
        defines         = ["HAL_ETHMAC_TARGET_NX500"],
        includes        = ["hal_ethmac/Includes",
                           "hal_ethmac/netx100/Includes",
                          ],
        export_includes = ["hal_ethmac/Includes",
                           "hal_ethmac/netx100/Includes",
                          ],
        use             = ["hal_common_netx100"],
        version_include = "eth_mac_version.h",
        displaygroup    = APPNAME,
    )

    # netX50
    bld.stlib(
        target          = "hal_ethmac_netx50",
        name            = "hal_ethmac_netx50",
        platform        = "netx50",
        toolchain       = use_toolchain,
        description     = "Ethernet MAC Library netX50  ",
        source          = ["hal_ethmac/netx50/Sources/hal_ethmac.c",
                           "hal_ethmac/netx50/Sources/rpu_ethmac0.c",
                           "hal_ethmac/netx50/Sources/rpu_ethmac1.c",
                           "hal_ethmac/netx50/Sources/tpu_ethmac0.c",
                           "hal_ethmac/netx50/Sources/tpu_ethmac1.c",
                           "hal_ethmac/netx50/Sources/xpec_ethmac0.c",
                           "hal_ethmac/netx50/Sources/xpec_ethmac1.c",
                          ],
        defines         = ["HAL_ETHMAC_TARGET_NX50"],
        includes        = ["hal_ethmac/Includes",
                           "hal_ethmac/netx50/Includes",
                          ],
        export_includes = ["hal_ethmac/Includes",
                           "hal_ethmac/netx50/Includes",
                          ],
        use             = ["hal_common_netx50"],
        version_include = "eth_mac_version.h",
        displaygroup    = APPNAME,
    )

    # netX5
    bld.stlib(
        target          = "hal_ethmac_netx5",
        name            = "hal_ethmac_netx5",
        platform        = "netx50",
        toolchain       = use_toolchain,
        description     = "Ethernet MAC Library netX5   ",
        source          = ["hal_ethmac/netx5/Sources/hal_ethmac.c",
                           "hal_ethmac/netx5/Sources/rpu_ethmac0.c",
                           "hal_ethmac/netx5/Sources/rpu_ethmac1.c",
                           "hal_ethmac/netx5/Sources/tpu_ethmac0.c",
                           "hal_ethmac/netx5/Sources/tpu_ethmac1.c",
                           "hal_ethmac/netx5/Sources/xpec_ethmac0.c",
                           "hal_ethmac/netx5/Sources/xpec_ethmac1.c",
                          ],
        includes        = ["hal_ethmac/Includes",
                           "hal_ethmac/netx5/Includes",
                          ],
        export_includes = ["hal_ethmac/Includes",
                           "hal_ethmac/netx5/Includes",
                          ],
        defines         = ["HAL_ETHMAC_TARGET_NX5",
                           "NX5_PARALLEL_DPM",
                          ],
        use             = ["hal_common_netx50"],
        version_include = "eth_mac_version.h",
        displaygroup    = APPNAME,
    )

    # netX10
    bld.stlib(
        target          = "hal_ethmac_netx10",
        name            = "hal_ethmac_netx10",
        platform        = "netx10",
        toolchain       = use_toolchain,
        description     = "Ethernet MAC Library netX10  ",
        source          = ["hal_ethmac/netx10/Sources/hal_ethmac.c",
                           "hal_ethmac/netx10/Sources/rpu_ethmac0.c",
                           "hal_ethmac/netx10/Sources/tpu_ethmac0.c",
                           "hal_ethmac/netx10/Sources/xpec_ethmac0.c",
                          ],
        defines         = ["HAL_ETHMAC_TARGET_NX10"],
        includes        = ["hal_ethmac/Includes",
                           "hal_ethmac/netx10/Includes",
                          ],
        export_includes = ["hal_ethmac/Includes",
                           "hal_ethmac/netx10/Includes",
                          ],
        use             = ["hal_common_netx10"],
        version_include = "eth_mac_version.h",
        displaygroup    = APPNAME,
    )

    # netX51, netX52
    bld.stlib(
        target          = "hal_ethmac_netx51",
        name            = "hal_ethmac_netx51",
        platform        = "netx51",
        toolchain       = use_toolchain,
        description     = "Ethernet MAC Library netX51  ",
        source          = ["hal_ethmac/netx51/Sources/hal_ethmac.c",
                           "hal_ethmac/netx51/Sources/rpu_ethmac0.c",
                           "hal_ethmac/netx51/Sources/rpu_ethmac1.c",
                           "hal_ethmac/netx51/Sources/tpu_ethmac0.c",
                           "hal_ethmac/netx51/Sources/tpu_ethmac1.c",
                           "hal_ethmac/netx51/Sources/rpec_ethmac_rpec0.c",
                           "hal_ethmac/netx51/Sources/rpec_ethmac_rpec1.c",
                           "hal_ethmac/netx51/Sources/tpec_ethmac_tpec0.c",
                           "hal_ethmac/netx51/Sources/tpec_ethmac_tpec1.c",
                          ],
        defines         = ["HAL_ETHMAC_TARGET_NX51"],
        includes        = ["hal_ethmac/Includes",
                           "hal_ethmac/netx51/Includes",
                          ],
        export_includes = ["hal_ethmac/Includes",
                           "hal_ethmac/netx51/Includes",
                          ],
        use             = ["hal_common_netx51"],
        version_include = "eth_mac_version.h",
        displaygroup    = APPNAME,
    )

    # netX6 (host is netX51)
    bld.stlib(
        target          = "hal_ethmac_netx6",
        name            = "hal_ethmac_netx6",
        platform        = "netx",
        toolchain       = use_toolchain,
        description     = "Ethernet MAC Library netX6   ",
        source          = ["hal_ethmac/netx51/Sources/hal_ethmac.c",
                           "hal_ethmac/netx51/Sources/rpu_ethmac0.c",
                           "hal_ethmac/netx51/Sources/rpu_ethmac1.c",
                           "hal_ethmac/netx51/Sources/tpu_ethmac0.c",
                           "hal_ethmac/netx51/Sources/tpu_ethmac1.c",
                           "hal_ethmac/netx51/Sources/rpec_ethmac_rpec0.c",
                           "hal_ethmac/netx51/Sources/rpec_ethmac_rpec1.c",
                           "hal_ethmac/netx51/Sources/tpec_ethmac_tpec0.c",
                           "hal_ethmac/netx51/Sources/tpec_ethmac_tpec1.c",
                          ],
        includes        = ["hal_ethmac/Includes",
                           "hal_ethmac/netx51/Includes",
                          ],
        export_includes = ["hal_ethmac/Includes",
                           "hal_ethmac/netx51/Includes",
                          ],
        defines         = ["HAL_ETHMAC_TARGET_NX6"],
        use             = ["hal_common_netx51",
                           "hal_common_netx6",
                          ],
        version_include = "eth_mac_version.h",
        displaygroup    = APPNAME,
    )

    # netX4000
    bld.stlib(
        target          = "hal_ethmac_netx4000",
        name            = "hal_ethmac_netx4000",
        platform        = "netx4000",
        toolchain       = use_toolchain,
        description     = "Ethernet MAC Library netX4000",
        source          = ["hal_ethmac/netx4000/Sources/hal_ethmac.c",
                           "hal_ethmac/netx4000/Sources/rpu_ethmac0.c",
                           "hal_ethmac/netx4000/Sources/rpu_ethmac1.c",
                           "hal_ethmac/netx4000/Sources/rpu_ethmac2.c",
                           "hal_ethmac/netx4000/Sources/rpu_ethmac3.c",
                           "hal_ethmac/netx4000/Sources/tpu_ethmac0.c",
                           "hal_ethmac/netx4000/Sources/tpu_ethmac1.c",
                           "hal_ethmac/netx4000/Sources/tpu_ethmac2.c",
                           "hal_ethmac/netx4000/Sources/tpu_ethmac3.c",
                           "hal_ethmac/netx4000/Sources/rpec_ethmac_rpec0.c",
                           "hal_ethmac/netx4000/Sources/rpec_ethmac_rpec1.c",
                           "hal_ethmac/netx4000/Sources/rpec_ethmac_rpec2.c",
                           "hal_ethmac/netx4000/Sources/rpec_ethmac_rpec3.c",
                           "hal_ethmac/netx4000/Sources/tpec_ethmac_tpec0.c",
                           "hal_ethmac/netx4000/Sources/tpec_ethmac_tpec1.c",
                           "hal_ethmac/netx4000/Sources/tpec_ethmac_tpec2.c",
                           "hal_ethmac/netx4000/Sources/tpec_ethmac_tpec3.c",
                          ],
        includes        = ["hal_ethmac/Includes",
                           "hal_ethmac/netx4000/Includes",
                          ],
        export_includes = ["hal_ethmac/Includes",
                           "hal_ethmac/netx4000/Includes",
                          ],
        defines         = ["HAL_ETHMAC_TARGET_NX4000"],
        use             = ["hal_common_netx4000"],
        version_include = "eth_mac_version.h",
        displaygroup    = APPNAME,
    )

    # netX90
    bld.stlib(
        target          = "hal_ethmac_netx90",
        name            = "hal_ethmac_netx90",
        platform        = "netx90",
        toolchain       = use_toolchain,
        description     = "Ethernet MAC Library netX90  ",
        source          = ["hal_ethmac/netx90/Sources/hal_ethmac.c",
                           "hal_ethmac/netx90/Sources/rpu_ethmac0.c",
                           "hal_ethmac/netx90/Sources/rpu_ethmac1.c",
                           "hal_ethmac/netx90/Sources/tpu_ethmac0.c",
                           "hal_ethmac/netx90/Sources/tpu_ethmac1.c",
                           "hal_ethmac/netx90/Sources/rpec_ethmac_rpec0.c",
                           "hal_ethmac/netx90/Sources/rpec_ethmac_rpec1.c",
                           "hal_ethmac/netx90/Sources/tpec_ethmac_tpec0.c",
                           "hal_ethmac/netx90/Sources/tpec_ethmac_tpec1.c",
                          ],
        includes        = ["hal_ethmac/Includes",
                           "hal_ethmac/netx90/Includes",
                          ],
        export_includes = ["hal_ethmac/Includes",
                           "hal_ethmac/netx90/Includes",
                          ],
        use             = ["hal_common_netx90"],
        defines         = ["__NETX90",
                           "HAL_ETHMAC_TARGET_NX90",
                          ],
        version_include = "eth_mac_version.h",
        displaygroup    = APPNAME,
    )

    # -----------------------------------------------------------------
    # Common functions

    bld.sdkcomponent(
        name            = "hal_common_sdk",
        export_includes = ["hal_common/Includes"],
        public_includes = ["hal_common/Includes"],
        displaygroup    = APPNAME,
    )

    # netX100, netX500
    bld.stlib(
        target          = "hal_common_netx100",
        name            = "hal_common_netx100",
        platform        = "netx100",
        toolchain       = use_toolchain,
        description     = "ASIC Peripherals Library netX100 ",
        source_arm      = ["hal_common/netx100/Sources/common_func_netx500.c",],
        includes        = ["hal_common/netx100/Includes"],
        export_includes = ["hal_common/netx100/Includes"],
        use             = ["hal_common_sdk"],
        version_include = "hal_common_version.h",
        displaygroup    = APPNAME,
    )

    # netX50, netX5
    bld.stlib(
        target          = "hal_common_netx50",
        name            = "hal_common_netx50",
        platform        = "netx50",
        toolchain       = use_toolchain,
        description     = "ASIC Peripherals Library netX50  ",
        source_arm      = ["hal_common/netx50/Sources/common_func_netx50.c",
                           "hal_common/netx5/Sources/common_func_netx5.c",
                           "hal_common/netx5/Sources/dpm_func_netx50.c",
                          ],
        includes        = ["hal_common/netx50/Includes",
                           "hal_common/netx5/Includes",
                          ],
        export_includes = ["hal_common/netx50/Includes",
                           "hal_common/netx5/Includes",
                          ],
        use             = ["hal_common_sdk"],
        version_include = "hal_common_version.h",
        displaygroup    = APPNAME,
    )

    # netX10
    bld.stlib(
        target          = "hal_common_netx10",
        name            = "hal_common_netx10",
        platform        = "netx10",
        toolchain       = use_toolchain,
        description     = "ASIC Peripherals Library netX10  ",
        source_arm      = ["hal_common/netx10/Sources/common_func_netx10.c"],
        includes        = ["hal_common/netx10/Includes"],
        export_includes = ["hal_common/netx10/Includes"],
        use             = ["hal_common_sdk"],
        version_include = "hal_common_version.h",
        displaygroup    = APPNAME,
    )

    # netX51, netX52
    bld.stlib(
        target          = "hal_common_netx51",
        name            = "hal_common_netx51",
        platform        = "netx51",
        toolchain       = use_toolchain,
        description     = "ASIC Peripherals Library netX51  ",
        source_arm      = ["hal_common/netx51/Sources/netx51_access_nx6.c",
                           "hal_common/netx51/Sources/netx51_armtimer.c",
                           "hal_common/netx51/Sources/netx51_asicctrl.c",
                           "hal_common/netx51/Sources/netx51_dpm.c",
                           "hal_common/netx51/Sources/netx51_gpio.c",
                           "hal_common/netx51/Sources/netx51_hif_asyncmem_ctrl.c",
                           "hal_common/netx51/Sources/netx51_hif_ioctrl.c",
                           "hal_common/netx51/Sources/netx51_hsctrl.c",
                           "hal_common/netx51/Sources/netx51_intphy.c",
                           "hal_common/netx51/Sources/netx51_miimu.c",
                           "hal_common/netx51/Sources/netx51_mmio.c",
                           "hal_common/netx51/Sources/netx51_pfifo.c",
                           "hal_common/netx51/Sources/netx51_pio.c",
                           "hal_common/netx51/Sources/netx51_spi_motion.c",
                           "hal_common/netx51/Sources/netx51_systime_uc.c",
                           "hal_common/netx51/Sources/netx51_systime.c",
                           "hal_common/netx51/Sources/netx51_trgsmpl.c",
                           "hal_common/netx51/Sources/netx51_uart.c",
                           "hal_common/netx51/Sources/netx51_usbcdc.c",
                           "hal_common/netx51/Sources/netx51_vic.c",
                           "hal_common/netx51/Sources/netx51_xc.c",
                           ],
        includes        = ["hal_common/netx51/Includes",
                           "hal_common/netx6/Includes",
                          ],
        export_includes = ["hal_common/netx51/Includes"],
        use             = ["hal_common_sdk"],
        version_include = "hal_common_version.h",
        displaygroup    = APPNAME,
    )

    # netX6
    bld.stlib(
        target          = "hal_common_netx6",
        name            = "hal_common_netx6",
        platform        = "netx51",
        toolchain       = use_toolchain,
        description     = "ASIC Peripherals Library netX51  ",
        source_arm      = ["hal_common/netx6/Sources/netx6_asicctrl.c",
                           "hal_common/netx6/Sources/netx6_bufman.c",
                           "hal_common/netx6/Sources/netx6_dpm.c",
                           "hal_common/netx6/Sources/netx6_fmmusm.c",
                           "hal_common/netx6/Sources/netx6_gpio.c",
                           "hal_common/netx6/Sources/netx6_intphy.c",
                           "hal_common/netx6/Sources/netx6_miimu.c",
                           "hal_common/netx6/Sources/netx6_mmio.c",
                           "hal_common/netx6/Sources/netx6_pfifo.c",
                           "hal_common/netx6/Sources/netx6_pio.c",
                           "hal_common/netx6/Sources/netx6_rdyrun.c",
                           "hal_common/netx6/Sources/netx6_systime_uc.c",
                           "hal_common/netx6/Sources/netx6_systime.c",
                           "hal_common/netx6/Sources/netx6_trgsmpl.c",
                           "hal_common/netx6/Sources/netx6_xc.c",
                           "hal_common/netx6/Sources/netx6_xpecirq.c",
                           "hal_common/netx6/Sources/netx6_xpic.c",
                          ],
        includes        = ["hal_common/netx51/Includes",
                           "hal_common/netx6/Includes",
                          ],
        export_includes = ["hal_common/netx51/Includes",
                           "hal_common/netx6/Includes",
                          ],
        use             = ["hal_common_sdk"],
        version_include = "hal_common_version.h",
        displaygroup    = APPNAME,
    )

    # netX4000
    bld.stlib(
        target          = "hal_common_netx4000",
        name            = "hal_common_netx4000",
        platform        = "netx4000",
        toolchain       = use_toolchain,
        description     = "ASIC Peripherals Library netX4000",
        source_arm      = ["hal_common/Sources/hal_asicctrl.c",
                           "hal_common/Sources/hal_extphy.c",
                           "hal_common/Sources/hal_gpio.c",
                           "hal_common/Sources/hal_mmio.c",
                           "hal_common/Sources/hal_pfifo.c",
                           "hal_common/Sources/hal_phyctrl.c",
                           "hal_common/Sources/hal_pio.c",
                           "hal_common/Sources/hal_rdyrun.c",
                           "hal_common/Sources/hal_systime.c",
                           "hal_common/Sources/hal_uart.c",
                           "hal_common/Sources/hal_xc.c",
                           "hal_common/netx4000/Sources/hal_armirq.c",
                           "hal_common/netx4000/Sources/hal_armtimer.c",
                           "hal_common/netx4000/Sources/hal_gic.c",
                           "hal_common/netx4000/Sources/hal_gtimer.c",
                           "hal_common/netx4000/Sources/hal_intphy.c",
                           "hal_common/netx4000/Sources/hal_miimu.c",
                           "hal_common/netx4000/Sources/hal_ptimer.c",
                           "hal_common/netx4000/Sources/hal_systime_lt.c",
                           "hal_common/netx4000/Sources/hal_usbcdc.c",
                           ],
        includes        = ["hal_common/netx4000/Includes"],
        export_includes = ["hal_common/netx4000/Includes"],
        use             = ["hal_common_sdk"],
        version_include = "hal_common_version.h",
        defines         = ["__NETX4000"],
        displaygroup    = APPNAME,
    )

    # netX90
    bld.stlib(
        target          = "hal_common_netx90",
        name            = "hal_common_netx90",
        platform        = "netx90",
        toolchain       = use_toolchain,
        description     = "ASIC Peripherals Library netX90  ",
        source          = ["hal_common/Sources/hal_extphy.c",
                           "hal_common/Sources/hal_gpio.c",
                           "hal_common/Sources/hal_mmio.c",
                           "hal_common/Sources/hal_pfifo.c",
                           "hal_common/Sources/hal_systime.c",
                           "hal_common/Sources/hal_uart.c",
                           "hal_common/Sources/hal_xc.c",
                           "hal_common/netx90/Sources/hal_rdyrun.c",
                           "hal_common/netx90/Sources/hal_asicctrl.c",
                           "hal_common/netx90/Sources/hal_asicctrl_com.c",
                           "hal_common/netx90/Sources/hal_armirq.c",
                           "hal_common/netx90/Sources/hal_armtimer.c",
                           "hal_common/netx90/Sources/hal_intphy.c",
                           "hal_common/netx90/Sources/hal_miimu.c",
                           "hal_common/netx90/Sources/hal_mled_ctrl.c",
                           "hal_common/netx90/Sources/hal_padctrl.c",
                          ],
        includes        = ["hal_common/netx90/Includes"],
        export_includes = ["hal_common/netx90/Includes"],
        use             = ["hal_common_sdk"],
        version_include = "hal_common_version.h",
        defines         = ["__NETX90"],
        cflags          = ["-fno-delete-null-pointer-checks"],
        displaygroup    = APPNAME,
    )


    # -----------------------------------------------------------------
    # printf

    bld.stlib(
        target          = "printf",
        name            = "printf",
        platform        = "netx",
        toolchain       = use_toolchain,
        description     = "printf Library",
        source          = ["printf/Sources/sniprintf.c",
                           "printf/Sources/uprintf.c",
                          ],
        includes        = ["printf/Includes"],
        export_includes = ["printf/Includes"],
        displaygroup    = APPNAME,
    )

    # -----------------------------------------------------------------
    # usb_cdc

    bld.stlib(
        target          = "usb_cdc_netx100",
        name            = "usb_cdc_netx100",
        platform        = "netx100",
        toolchain       = use_toolchain,
        description     = "USB_CDC Library netX100",
        source          = ["usb_cdc/Sources/usb_descriptors.c",
                           "usb_cdc/Sources/usb_globals.c",
                           "usb_cdc/Sources/usb_io.c",
                           "usb_cdc/Sources/usb_requests_cdc.c",
                           "usb_cdc/Sources/usb_requests_common.c",
                           "usb_cdc/Sources/usb_requests_std.c",
                           "usb_cdc/Sources/usb_requests_top.c",
                          ],
        includes        = ["usb_cdc/Includes"],
        export_includes = ["usb_cdc/Includes"],
        defines         = ["__NETX100"],
        displaygroup    = APPNAME,
    )

    bld.stlib(
        target          = "usb_cdc_netx50",
        name            = "usb_cdc_netx50",
        platform        = "netx50",
        toolchain       = use_toolchain,
        description     = "USB_CDC Library netX50",
        source          = ["usb_cdc/Sources/usb_descriptors.c",
                           "usb_cdc/Sources/usb_globals.c",
                           "usb_cdc/Sources/usb_io.c",
                           "usb_cdc/Sources/usb_requests_cdc.c",
                           "usb_cdc/Sources/usb_requests_common.c",
                           "usb_cdc/Sources/usb_requests_std.c",
                           "usb_cdc/Sources/usb_requests_top.c",
                          ],
        includes        = ["usb_cdc/Includes"],
        export_includes = ["usb_cdc/Includes"],
        defines         = ["__NETX50"],
        displaygroup    = APPNAME,
    )

    # -----------------------------------------------------------------
    # IP Stack

    bld.stlib(
        target          = "ip_stack",
        name            = "ip_stack",
        platform        = "netx",
        toolchain       = use_toolchain,
        description     = "IP Stack Library",
        source          = ["ip_stack/Sources/eth.c",
                           "ip_stack/Sources/arp.c",
                           "ip_stack/Sources/icmp.c",
                           "ip_stack/Sources/ip.c",
                           "ip_stack/Sources/udp.c",
                           "ip_stack/Sources/phy.c",
                          ],
        includes        = ["ip_stack/Includes",
                           "Includes",
                           "hal_common/Includes",
                          ],
        export_includes = ["ip_stack/Includes",
                           "Includes",
                          ],
        defines         = ["ETH_ECHO_UNKNOWN_FRAMES=0"],
        displaygroup    = APPNAME,
    )
