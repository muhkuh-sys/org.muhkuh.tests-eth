top = "."
out = "build"
APPNAME = "components"

def build(bld):

    use_toolchain = "gccarmemb"

    # -----------------------------------------------------------------
    # Ethernet 2Port Switch

    # header component, target independent
    bld.sdkcomponent(
        name            = "hal_eth2ps_sdk",
        export_includes = ["hal_eth2ps/Includes"],
        public_includes = ["hal_eth2ps/Includes"],
        displaygroup    = APPNAME,
    )
    
    # netX100, netX500
    bld.stlib(
        target          = "hal_eth2ps_netx100",
        name            = "hal_eth2ps_netx100",
        platform        = "netx100",
        toolchain       = use_toolchain,
        description     = "Ethernet 2Port Switch Library netX100 ",
        source          = ["hal_eth2ps/Sources/hal_eth2ps.c",
                           "hal_eth2ps/netx100/Sources/rpu_eth2ps0.c",
                           "hal_eth2ps/netx100/Sources/rpu_eth2ps1.c",
                           "hal_eth2ps/netx100/Sources/rpu_clean3.c",
                           "hal_eth2ps/netx100/Sources/tpu_eth2ps0.c",
                           "hal_eth2ps/netx100/Sources/tpu_eth2ps1.c",
                           "hal_eth2ps/netx100/Sources/tpu_clean3.c",
                           "hal_eth2ps/netx100/Sources/xpec_eth2ps0.c",
                           "hal_eth2ps/netx100/Sources/xpec_eth2ps1.c",
                           "hal_eth2ps/netx100/Sources/xpec_eth2ps_sync3.c",
                          ],
        includes        = ["hal_eth2ps/netx100/Includes"],
        use             = ["hal_eth2ps_sdk",
                           "hal_common_netx100",
                          ],
        defines         = ["HAL_ETH2PS_TARGET_NX500"],
        version_include = "eth2ps_version.h",
        displaygroup    = APPNAME,
    )

    # netX50
    bld.stlib(
        target          = "hal_eth2ps_netx50",
        name            = "hal_eth2ps_netx50",
        platform        = "netx50",
        toolchain       = use_toolchain,
        description     = "Ethernet 2Port Switch Library netX50  ",
        source          = ["hal_eth2ps/Sources/hal_eth2ps.c",
                           "hal_eth2ps/netx50/Sources/rpu_eth2ps0.c",
                           "hal_eth2ps/netx50/Sources/rpu_eth2ps1.c",
                           "hal_eth2ps/netx50/Sources/tpu_eth2ps0.c",
                           "hal_eth2ps/netx50/Sources/tpu_eth2ps1.c",
                           "hal_eth2ps/netx50/Sources/xpec_eth2ps0.c",
                           "hal_eth2ps/netx50/Sources/xpec_eth2ps1.c",
                          ],
        includes        = ["hal_eth2ps/netx50/Includes"],
        use             = ["hal_eth2ps_sdk",
                           "hal_common_netx50",
                          ],
        defines         = ["HAL_ETH2PS_TARGET_NX50"],
        version_include = "eth2ps_version.h",
        displaygroup    = APPNAME,
    )

    
    # netX5 (host is netX50)
    bld.stlib(
        target          = "hal_eth2ps_netx5",
        name            = "hal_eth2ps_netx5",
        platform        = "netx",
        toolchain       = use_toolchain,
        description     = "Ethernet 2Port Switch Library netX5   ",
        source          = ["hal_eth2ps/Sources/hal_eth2ps.c",
                           "hal_eth2ps/netx5/Sources/rpu_eth2ps0.c",
                           "hal_eth2ps/netx5/Sources/rpu_eth2ps1.c",
                           "hal_eth2ps/netx5/Sources/tpu_eth2ps0.c",
                           "hal_eth2ps/netx5/Sources/tpu_eth2ps1.c",
                           "hal_eth2ps/netx5/Sources/xpec_eth2ps0.c",
                           "hal_eth2ps/netx5/Sources/xpec_eth2ps1.c",
                          ],
        includes        = ["hal_eth2ps/netx5/Includes"],
        use             = ["hal_eth2ps_sdk",
                           "hal_common_netx50",
                          ],
        defines         = ["HAL_ETH2PS_TARGET_NX5"],
        version_include = "eth2ps_version.h",
        displaygroup    = APPNAME,
    )
    

    # netX51, netX52
    bld.stlib(
        target          = "hal_eth2ps_netx51",
        name            = "hal_eth2ps_netx51",
        platform        = "netx51",
        toolchain       = use_toolchain,
        description     = "Ethernet 2Port Switch Library netX51  ",
        source          = ["hal_eth2ps/Sources/hal_eth2ps.c",
                           "hal_eth2ps/netx51/Sources/rpu_eth2ps0.c",
                           "hal_eth2ps/netx51/Sources/rpu_eth2ps1.c",
                           "hal_eth2ps/netx51/Sources/tpu_eth2ps0.c",
                           "hal_eth2ps/netx51/Sources/tpu_eth2ps1.c",
                           "hal_eth2ps/netx51/Sources/rpec_eth2ps_rpec0.c",
                           "hal_eth2ps/netx51/Sources/rpec_eth2ps_rpec1.c",
                           "hal_eth2ps/netx51/Sources/tpec_eth2ps_tpec0.c",
                           "hal_eth2ps/netx51/Sources/tpec_eth2ps_tpec1.c",
                          ],
        includes        = ["hal_eth2ps/netx51/Includes"],
        use             = ["hal_eth2ps_sdk",
                           "hal_common_netx51",
                          ],
        defines         = ["HAL_ETH2PS_TARGET_NX51"],
        version_include = "eth2ps_version.h",
        displaygroup    = APPNAME,
    )

    # netX6 (host is netX51)
    bld.stlib(
        target          = "hal_eth2ps_netx6",
        name            = "hal_eth2ps_netx6",
        platform        = "netx",
        toolchain       = use_toolchain,
        description     = "Ethernet 2Port Switch Library netX6   ",
        source          = ["hal_eth2ps/Sources/hal_eth2ps.c",
                           "hal_eth2ps/netx51/Sources/rpu_eth2ps0.c",
                           "hal_eth2ps/netx51/Sources/rpu_eth2ps1.c",
                           "hal_eth2ps/netx51/Sources/tpu_eth2ps0.c",
                           "hal_eth2ps/netx51/Sources/tpu_eth2ps1.c",
                           "hal_eth2ps/netx51/Sources/rpec_eth2ps_rpec0.c",
                           "hal_eth2ps/netx51/Sources/rpec_eth2ps_rpec1.c",
                           "hal_eth2ps/netx51/Sources/tpec_eth2ps_tpec0.c",
                           "hal_eth2ps/netx51/Sources/tpec_eth2ps_tpec1.c",
                          ],
        includes        = ["hal_eth2ps/netx51/Includes"],
        use             = ["hal_eth2ps_sdk",
                           "hal_common_netx6",
                           "hal_common_netx51",
                          ],
        defines         = ["HAL_ETH2PS_TARGET_NX6"],
        version_include = "eth2ps_version.h",
        displaygroup    = APPNAME,
    )

    # netX4000
    bld.stlib(
        target          = "hal_eth2ps_netx4000",
        name            = "hal_eth2ps_netx4000",
        platform        = "netx4000",
        toolchain       = use_toolchain,
        description     = "Ethernet 2Port Switch Library netX4000",
        source          = ["hal_eth2ps/netx4000/Sources/hal_eth2ps.c",
                           "hal_eth2ps/netx4000/Sources/rpu_eth2ps0.c",
                           "hal_eth2ps/netx4000/Sources/rpu_eth2ps1.c",
                           "hal_eth2ps/netx4000/Sources/tpu_eth2ps0.c",
                           "hal_eth2ps/netx4000/Sources/tpu_eth2ps1.c",
                           "hal_eth2ps/netx4000/Sources/rpec_eth2ps_rpec0.c",
                           "hal_eth2ps/netx4000/Sources/rpec_eth2ps_rpec1.c",
                           "hal_eth2ps/netx4000/Sources/tpec_eth2ps_tpec0.c",
                           "hal_eth2ps/netx4000/Sources/tpec_eth2ps_tpec1.c",
                          ],
        includes        = ["hal_eth2ps/netx4000/Includes"],
        use             = ["hal_eth2ps_sdk",
                           "hal_common_netx4000",
                          ],
        defines         = ["__NETX4000",
                           "HAL_ETH2PS_TARGET_NX4000=1",
                          ],
        version_include = "eth2ps_version.h",
        displaygroup    = APPNAME,
    )

    # netX4000
    bld.stlib(
        target          = "hal_eth2ps_netx4000_xc1",
        name            = "hal_eth2ps_netx4000_xc1",
        platform        = "netx4000",
        toolchain       = use_toolchain,
        description     = "Ethernet 2Port Switch Library netX4000",
        source          = ["hal_eth2ps/netx4000/Sources/hal_eth2ps.c",
                           "hal_eth2ps/netx4000/Sources/rpu_eth2ps2.c",
                           "hal_eth2ps/netx4000/Sources/rpu_eth2ps3.c",
                           "hal_eth2ps/netx4000/Sources/tpu_eth2ps2.c",
                           "hal_eth2ps/netx4000/Sources/tpu_eth2ps3.c",
                           "hal_eth2ps/netx4000/Sources/rpec_eth2ps_rpec2.c",
                           "hal_eth2ps/netx4000/Sources/rpec_eth2ps_rpec3.c",
                           "hal_eth2ps/netx4000/Sources/tpec_eth2ps_tpec2.c",
                           "hal_eth2ps/netx4000/Sources/tpec_eth2ps_tpec3.c",
                          ],
        includes        = ["hal_eth2ps/netx4000/Includes"],
        use             = ["hal_eth2ps_sdk",
                           "hal_common_netx4000",
                          ],
        defines         = ["__NETX4000",
                           "HAL_ETH2PS_TARGET_NX4000=1",
                           "XC_INST=1"
                          ],
        version_include = "eth2ps_version.h",
        displaygroup    = APPNAME,
    )

    # netX90
    bld.stlib(
        target          = "hal_eth2ps_netx90",
        name            = "hal_eth2ps_netx90",
        platform        = "netx90",
        toolchain       = use_toolchain,
        description     = "Ethernet 2Port Switch Library netX90  ",
        source          = ["hal_eth2ps/netx90/Sources/hal_eth2ps.c",
                           "hal_eth2ps/netx90/Sources/rpu_eth2ps0.c",
                           "hal_eth2ps/netx90/Sources/rpu_eth2ps1.c",
                           "hal_eth2ps/netx90/Sources/tpu_eth2ps0.c",
                           "hal_eth2ps/netx90/Sources/tpu_eth2ps1.c",
                           "hal_eth2ps/netx90/Sources/rpec_eth2ps_rpec0.c",
                           "hal_eth2ps/netx90/Sources/rpec_eth2ps_rpec1.c",
                           "hal_eth2ps/netx90/Sources/tpec_eth2ps_tpec0.c",
                           "hal_eth2ps/netx90/Sources/tpec_eth2ps_tpec1.c",
                          ],
        includes        = ["hal_eth2ps/netx90/Includes"],
        use             = ["hal_eth2ps_sdk",
                           "hal_common_netx90",
                          ],
        defines         = ["__NETX90",
                           "HAL_ETH2PS_TARGET_NX90=1"
                          ],
        version_include = "eth2ps_version.h",
        displaygroup    = APPNAME,
    )

    # -----------------------------------------------------------------
    # Common functions

    bld.sdkcomponent(
        name            = "hal_common_sdk",
        export_includes = ["hal_common/Includes"],
        public_includes = ["hal_common/Includes"],
        displaygroup    = APPNAME,
    )
    
    # netX100, netX500
    bld.stlib(
        target          = "hal_common_netx100",
        name            = "hal_common_netx100",
        platform        = "netx100",
        toolchain       = use_toolchain,
        description     = "ASIC Peripherals Library netX100 ",
        source_arm      = ["hal_common/netx100/Sources/common_func_netx500.c",
                           "hal_common/Sources/hal_irq.s",
                          ],
        includes        = ["hal_common/netx100/Includes"],
        export_includes = ["hal_common/netx100/Includes"],
        use             = ["hal_common_sdk"],
        version_include = "hal_common_version.h",
        displaygroup    = APPNAME,
    )

    # netX50, netX5
    bld.stlib(
        target          = "hal_common_netx50",
        name            = "hal_common_netx50",
        platform        = "netx50",
        toolchain       = use_toolchain,
        description     = "ASIC Peripherals Library netX50  ",
        source_arm      = ["hal_common/netx50/Sources/common_func_netx50.c",
                           "hal_common/netx5/Sources/common_func_netx5.c",
                           "hal_common/netx5/Sources/dpm_func_netx50.c",
                           "hal_common/Sources/hal_irq.s",
                          ],
        includes        = ["hal_common/netx50/Includes",
                           "hal_common/netx5/Includes",
                          ],
        export_includes = ["hal_common/netx50/Includes",
                           "hal_common/netx5/Includes",
                          ],
        use             = ["hal_common_sdk"],
        version_include = "hal_common_version.h",
        displaygroup    = APPNAME,
    )

    bld.sdkcomponent(
        name            = "hal_common_netx10",
        export_includes = ["hal_common/netx10/Includes",
                           "hal_common/Includes",
                          ],
        public_includes = ["hal_common/netx10/Includes",
                           "hal_common/Includes",
                          ],
        displaygroup    = APPNAME,
    )

    # netX51, netX52
    bld.stlib(
        target          = "hal_common_netx51",
        name            = "hal_common_netx51",
        platform        = "netx51",
        toolchain       = use_toolchain,
        description     = "ASIC Peripherals Library netX51  ",
        source_arm      = ["hal_common/netx51/Sources/netx51_access_nx6.c",
                           "hal_common/netx51/Sources/netx51_armtimer.c",
                           "hal_common/netx51/Sources/netx51_asicctrl.c",
                           "hal_common/netx51/Sources/netx51_dpm.c",
                           "hal_common/netx51/Sources/netx51_gpio.c",
                           "hal_common/netx51/Sources/netx51_hif_asyncmem_ctrl.c",
                           "hal_common/netx51/Sources/netx51_hif_ioctrl.c",
                           "hal_common/netx51/Sources/netx51_hsctrl.c",
                           "hal_common/netx51/Sources/netx51_intphy.c",
                           "hal_common/netx51/Sources/netx51_miimu.c",
                           "hal_common/netx51/Sources/netx51_mmio.c",
                           "hal_common/netx51/Sources/netx51_pfifo.c",
                           "hal_common/netx51/Sources/netx51_pio.c",
                           "hal_common/netx51/Sources/netx51_systime.c",
                           "hal_common/netx51/Sources/netx51_vic.c",
                           "hal_common/netx51/Sources/netx51_xc.c",
                           "hal_common/Sources/hal_irq.s",
                           "hal_common/Sources/hal_rdyrun.c",
                           "hal_common/Sources/hal_usbcdc.c",
                          ],
        includes        = ["hal_common/netx51/Includes",
                           "hal_common/netx6/Includes",
                          ],
        export_includes = ["hal_common/netx51/Includes"],
        use             = ["hal_common_sdk"],
        defines         = ["__NETX51"],
        version_include = "hal_common_version.h",
        displaygroup    = APPNAME,
    )

    # netX6
    bld.stlib(
        target          = "hal_common_netx6",
        name            = "hal_common_netx6",
        platform        = "netx51",
        toolchain       = use_toolchain,
        description     = "ASIC Peripherals Library netX51  ",
        source_arm      = ["hal_common/netx6/Sources/netx6_asicctrl.c",
                           "hal_common/netx6/Sources/netx6_dpm.c",
                           "hal_common/netx6/Sources/netx6_gpio.c",
                           "hal_common/netx6/Sources/netx6_intphy.c",
                           "hal_common/netx6/Sources/netx6_miimu.c",
                           "hal_common/netx6/Sources/netx6_mmio.c",
                           "hal_common/netx6/Sources/netx6_pfifo.c",
                           "hal_common/netx6/Sources/netx6_pio.c",
                           "hal_common/netx6/Sources/netx6_rdyrun.c",
                           "hal_common/netx6/Sources/netx6_systime.c",
                           "hal_common/netx6/Sources/netx6_xc.c",
                           "hal_common/netx6/Sources/netx6_xpic.c",
                          ],
        includes        = ["hal_common/netx51/Includes",
                           "hal_common/netx6/Includes",
                          ],
        export_includes = ["hal_common/netx51/Includes",
                           "hal_common/netx6/Includes",
                          ],
        use             = ["hal_common_sdk"],
        defines         = ["__NETX51"],
        version_include = "hal_common_version.h",
        displaygroup    = APPNAME,
    )

    # netX4000
    bld.stlib(
        target          = "hal_common_netx4000",
        name            = "hal_common_netx4000",
        platform        = "netx4000",
        toolchain       = use_toolchain,
        description     = "ASIC Peripherals Library netX4000",
        source_arm      = ["hal_common/netx4000/Sources/hal_armirq.c",
                           "hal_common/netx4000/Sources/hal_asicctrl.c",
                           "hal_common/netx4000/Sources/hal_armtimer.c",
                           "hal_common/netx4000/Sources/hal_gtimer.c",
                           "hal_common/netx4000/Sources/hal_intphy.c",
                           "hal_common/netx4000/Sources/hal_miimu.c",
                           "hal_common/netx4000/Sources/hal_ptimer.c",
                           "hal_common/netx4000/Sources/hal_rap_portctrl.c",
                           "hal_common/netx4000/Sources/hal_systime_lt.c",
                           "hal_common/Sources/hal_irq.s",
                           "hal_common/Sources/hal_usbcdc.c",
                           "hal_common/Sources/hal_gpio.c",
                           "hal_common/Sources/hal_hif_ioctrl.c",
                           "hal_common/Sources/hal_mmio.c",
                           "hal_common/Sources/hal_pfifo.c",
                           "hal_common/Sources/hal_phyctrl.c",
                           "hal_common/Sources/hal_phy_bcm5241.c",
                           "hal_common/Sources/hal_pio.c",
                           "hal_common/Sources/hal_rdyrun.c",
                           "hal_common/Sources/hal_systime.c",
                           "hal_common/Sources/hal_uart.c",
                           "hal_common/Sources/hal_xc.c",
                           "hal_common/Sources/hal_xpic.c",
                          ],
        includes        = ["hal_common/netx4000/Includes"],
        export_includes = ["hal_common/netx4000/Includes"],
        use             = ["hal_common_sdk"],
        defines         = ["__NETX4000"],
        version_include = "hal_common_version.h",
        displaygroup    = APPNAME,
    )

    # netX90
    bld.stlib(
        target          = "hal_common_netx90",
        name            = "hal_common_netx90",
        platform        = "netx90",
        toolchain       = use_toolchain,
        description     = "ASIC Peripherals Library netX90  ",
        source          = ["hal_common/netx90/Sources/hal_asicctrl.c",
                           "hal_common/netx90/Sources/hal_asicctrl_com.c",
                           "hal_common/netx90/Sources/hal_armirq.c",
                           "hal_common/netx90/Sources/hal_armtimer.c",
                           "hal_common/netx90/Sources/hal_dpm.c",
                           "hal_common/netx90/Sources/hal_iflash.c",
                           "hal_common/netx90/Sources/hal_intphy.c",
                           "hal_common/netx90/Sources/hal_miimu.c",
                           "hal_common/netx90/Sources/hal_mled_ctrl.c",
                           "hal_common/netx90/Sources/hal_padctrl.c",
                           "hal_common/Sources/hal_irq_cortex_m.s",
                           "hal_common/Sources/hal_blink.c",
                           "hal_common/Sources/hal_gpio.c",
                           "hal_common/Sources/hal_hif_ioctrl.c",
                           "hal_common/Sources/hal_mmio.c",
                           "hal_common/Sources/hal_pfifo.c",
                           "hal_common/Sources/hal_phyctrl.c",
                           "hal_common/Sources/hal_systime.c",
                           "hal_common/Sources/hal_uart.c",
                           "hal_common/Sources/hal_xc.c",
                           "hal_common/Sources/hal_rdyrun.c",
                          ],
        includes        = ["hal_common/netx90/Includes"],
        export_includes = ["hal_common/netx90/Includes"],
        use             = ["hal_common_sdk"],
        defines         = ["__NETX90"],
        cflags          = ["-fno-delete-null-pointer-checks"],
        version_include = "hal_common_version.h",
        displaygroup    = APPNAME,
    )

    # -----------------------------------------------------------------
    # IP Stack

    bld.stlib(
        target          = "ip_stack",
        name            = "ip_stack",
        platform        = "netx",
        toolchain       = use_toolchain,
        description     = "IP Stack Library",
        source          = ["ip_stack/Sources/eth.c",
                           "ip_stack/Sources/arp.c",
                           "ip_stack/Sources/icmp.c",
                           "ip_stack/Sources/ip.c",
                          ],
        includes        = ["ip_stack/Includes",
                           "Includes",
                          ],
        export_includes = ["ip_stack/Includes",
                           "Includes",
                          ],
        use             = ["hal_common_sdk"],
        displaygroup    = APPNAME,
    )
