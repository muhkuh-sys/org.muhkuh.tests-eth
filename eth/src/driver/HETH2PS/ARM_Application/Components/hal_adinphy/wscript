top = "."
out = "build"
APPNAME = "hal_adinphy"

def build(bld):

    use_toolchain = "gccarmemb"

    # -----------------------------------------------------------------
    # ADIN1100 API

    # header component, target independent
    bld.sdkcomponent(
        name            = "hal_adinphy_sdk",
        export_includes = ["Includes"],
        public_includes = ["Includes"],
        displaygroup    = APPNAME,
    )

    # ADIN1100 library for chip version U1
    bld.stlib(
        target          = "hal_adinphy_u1_netx90",
        name            = "hal_adinphy_u1_netx90",
        platform        = "netx90",
        toolchain       = use_toolchain,
        description     = "adinphy library for chip version U1 ",
        source          = ["Sources/hal_adinphy.c",             # Source code of ADINPHY API
                          ],
        includes        = ["adin1100_u1/Includes",          # Include regdef for chip version U1
                          ],
        export_includes = [
                          ],
        use             = ["hal_adinphy_sdk",
                           "hal_common_netx90",
                          ],
        defines         = ["__NETX90",
                           "ADIN1100_CHIP_REV = 1",
                          ],
        displaygroup    = APPNAME,
    )
    
    # ADIN1100 library for chip version U2
    bld.stlib(
        target          = "hal_adinphy_u2_netx90",
        name            = "hal_adinphy_u2_netx90",
        platform        = "netx90",
        toolchain       = use_toolchain,
        description     = "ADIN1100 library for chip version U2 ",
        source          = ["Sources/hal_adinphy.c",             # Source code of ADINPHY API
                          ],
        includes        = ["adin1100_u2/Includes",          # Include regdef for chip version U2
                          ],
        export_includes = [
                          ],
        use             = ["hal_adinphy_sdk",
                           "hal_common_netx90",
                          ],
        defines         = ["__NETX90",
                           "ADIN1100_CHIP_REV = 2",
                          ],
        displaygroup    = APPNAME,
    )