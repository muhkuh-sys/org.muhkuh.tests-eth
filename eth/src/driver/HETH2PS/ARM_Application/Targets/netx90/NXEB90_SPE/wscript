top = "."
out = "build"
APPNAME = "eth2ps"

def build(bld):
    
    use_toolchain = "gccarmemb"
        
    #   ___  _______  ____    __    ___  ______               __            __  ______  __                    __ 
    #  <  / / __/ _ \/ __/ __/ /_  <  / / __/ /____ ____  ___/ /__ ________/ / / __/ /_/ /  ___ _______  ___ / /_
    #  / / _\ \/ ___/ _/  /_  __/  / / _\ \/ __/ _ `/ _ \/ _  / _ `/ __/ _  / / _// __/ _ \/ -_) __/ _ \/ -_) __/
    # /_/ /___/_/  /___/   /_/    /_/ /___/\__/\_,_/_//_/\_,_/\_,_/_/  \_,_/ /___/\__/_//_/\__/_/ /_//_/\__/\__/ 

    bld.program(
        target          = APPNAME + "_nxeb90_spe_1spe1mpe",
        name            = APPNAME + "_nxeb90_spe_1spe1mpe",
        platform        = "netx90",
        toolchain       = use_toolchain,
        description     = "Ethernet Switch Demo Application NXEB90-SPE with 1 SPE and 1 MPE port",
        includes        = ["../Includes", "Includes"],
        source          = ["../../Init/init_netx90.S",
                           "../Sources/main.c",
                           "../Sources/irq.c",
                           "Sources/sdram_test.c",
                          ],
        defines         = ["__NETX90",
                           "TARGET_HW = _NXEB90_SPE_",
                           "NUM_SPE_PORTS = 1"
                          ],
        use             = ["eth2ps",
                           "targetlib_nxeb90spe_1port_spe",
                           "hal_eth2ps_netx90",
                           "hal_adinphy_u2_netx90",        # Use this for boards with  U2 external PHY chip
                           #"hal_adinphy_u1_netx90",        # Use this for boards with U1 external PHY chip
                          ],
        stlib           = ["c"],
        asflags         = ["-mthumb"],
        linkerscript    = "../../Linker/netx90.ld",
        displaygroup    = APPNAME,
    )
    
    bld.generate_hboot_image(
        target     = "netx_nxeb90_spe_1spe1mpe.nxi",
        name       = APPNAME + "_image_spe_1spe1mpe",
        netx_type  = 'NETX90',
        hboot_xml  = 'Config/hboot_nxeb90_spe.xml',
        use        = [APPNAME + "_nxeb90_spe_1spe1mpe"],
    )
    
    #    ___    _______  ____
    #   |_  |  / __/ _ \/ __/
    #  / __/  _\ \/ ___/ _/  
    # /____/ /___/_/  /___/  
     
    bld.program(
        target          = APPNAME + "_nxeb90_spe_2spe",
        name            = APPNAME + "_nxeb90_spe_2spe",
        platform        = "netx90",
        toolchain       = use_toolchain,
        description     = "Ethernet Switch Demo Application NXEB90-SPE with 2 SPE ports",
        includes        = ["../Includes", "Includes"],
        source          = ["../../Init/init_netx90.S",
                           "../Sources/main.c",
                           "../Sources/irq.c",
                           "Sources/sdram_test.c",
                          ],
        defines         = ["__NETX90",
                           "TARGET_HW = _NXEB90_SPE_",
                           "NUM_SPE_PORTS = 2"
                          ],
        use             = ["eth2ps",
                           "targetlib_nxeb90spe_2port_spe",
                           "hal_eth2ps_netx90",
                           "hal_adinphy_u2_netx90",        # Use this for boards with  U2 external PHY chip
                           #"hal_adinphy_u1_netx90",        # Use this for boards with U1 external PHY chip
                          ],
        stlib           = ["c"],
        asflags         = ["-mthumb"],
        linkerscript    = "../../Linker/netx90.ld",
        displaygroup    = APPNAME,
    )
    
    bld.generate_hboot_image(
        target     = "netx_nxeb90_spe_2spe.nxi",
        name       = APPNAME + "_image_spe_2spe",
        netx_type  = 'NETX90',
        hboot_xml  = 'Config/hboot_nxeb90_spe.xml',
        use        = [APPNAME + "_nxeb90_spe_2spe"],
    )
