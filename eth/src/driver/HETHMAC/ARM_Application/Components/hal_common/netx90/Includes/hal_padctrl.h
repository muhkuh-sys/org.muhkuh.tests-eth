#ifndef __HAL_PADCTRL_H
#define __HAL_PADCTRL_H

#include <stdint.h>   /* ISO C: uint8_t/uint16_t/uint32_t definitions */
#include <stdbool.h>  /* ISO C: "bool" definition */

/* Definitions */

#define SRT_PADCTRL_CFG_PORT 16
#define SRT_PADCTRL_CFG_DS    0
#define SRT_PADCTRL_CFG_PE    4
#define SRT_PADCTRL_CFG_IE    6
#define MSK_PADCTRL_CFG_VAL 0x0000ffff

/* port: port id, e.g. PAD_CTRL_PORT_RST_IN_N
 * ie: input enable
 * pe: pull resistor enable
 * ds: driver strength
 */
#define PADCTRL_CFG(port, ie, ds, pe) (port << SRT_PADCTRL_CFG_PORT)\
  |(ds << SRT_PADCTRL_CFG_DS)\
  |(pe << SRT_PADCTRL_CFG_PE)\
  |(ie << SRT_PADCTRL_CFG_IE)

typedef enum
{
  PAD_CTRL_PORT_RDY_N = 0,
  PAD_CTRL_PORT_RUN_N,
  PAD_CTRL_PORT_MLED0,
  PAD_CTRL_PORT_MLED1,
  PAD_CTRL_PORT_MLED2,
  PAD_CTRL_PORT_MLED3,
  PAD_CTRL_PORT_COM_IO0,
  PAD_CTRL_PORT_COM_IO1,
  PAD_CTRL_PORT_COM_IO2,
  PAD_CTRL_PORT_COM_IO3,
  PAD_CTRL_PORT_UART_RXD,
  PAD_CTRL_PORT_UART_TXD,
  PAD_CTRL_PORT_MII0_RXCLK,
  PAD_CTRL_PORT_MII0_RXD0,
  PAD_CTRL_PORT_MII0_RXD1,
  PAD_CTRL_PORT_MII0_RXD2,
  PAD_CTRL_PORT_MII0_RXD3,
  PAD_CTRL_PORT_MII0_RXDV,
  PAD_CTRL_PORT_MII0_RXER,
  PAD_CTRL_PORT_MII0_TXCLK,
  PAD_CTRL_PORT_MII0_TXD0,
  PAD_CTRL_PORT_MII0_TXD1,
  PAD_CTRL_PORT_MII0_TXD2,
  PAD_CTRL_PORT_MII0_TXD3,
  PAD_CTRL_PORT_MII0_TXEN,
  PAD_CTRL_PORT_MII0_COL,
  PAD_CTRL_PORT_MII0_CRS,
  PAD_CTRL_PORT_PHY0_LED_LINK_IN,
  PAD_CTRL_PORT_MII1_RXCLK,
  PAD_CTRL_PORT_MII1_RXD0,
  PAD_CTRL_PORT_MII1_RXD1,
  PAD_CTRL_PORT_MII1_RXD2,
  PAD_CTRL_PORT_MII1_RXD3,
  PAD_CTRL_PORT_MII1_RXDV,
  PAD_CTRL_PORT_MII1_RXER,
  PAD_CTRL_PORT_MII1_TXCLK,
  PAD_CTRL_PORT_MII1_TXD0,
  PAD_CTRL_PORT_MII1_TXD1,
  PAD_CTRL_PORT_MII1_TXD2,
  PAD_CTRL_PORT_MII1_TXD3,
  PAD_CTRL_PORT_MII1_TXEN,
  PAD_CTRL_PORT_MII1_COL,
  PAD_CTRL_PORT_MII1_CRS,
  PAD_CTRL_PORT_PHY1_LED_LINK_IN,
  PAD_CTRL_PORT_MII_MDC,
  PAD_CTRL_PORT_MII_MDIO,
  PAD_CTRL_PORT_RST_OUT_N,
  PAD_CTRL_PORT_CLK25OUT,
  PAD_CTRL_PORT_MII0_TXEN_BGA2,
  PAD_CTRL_PORT_MII0_COL_BGA2,
  PAD_CTRL_PORT_MII0_CRS_BGA2,
  PAD_CTRL_PORT_PHY0_LED_LINK_IN_BGA2,
  PAD_CTRL_PORT_MII1_RXER_BGA2,
  PAD_CTRL_PORT_MII1_COL_BGA2,
  PAD_CTRL_PORT_MII1_CRS_BGA2,
  PAD_CTRL_PORT_PHY1_LED_LINK_IN_BGA2,
  PAD_CTRL_PORT_MMIO0,
  PAD_CTRL_PORT_MMIO1,
  PAD_CTRL_PORT_MMIO2,
  PAD_CTRL_PORT_MMIO3,
  PAD_CTRL_PORT_MMIO4,
  PAD_CTRL_PORT_MMIO5,
  PAD_CTRL_PORT_MMIO6,
  PAD_CTRL_PORT_MMIO7,
  PAD_CTRL_PORT_SQI_CLK,
  PAD_CTRL_PORT_SQI_CS0N,
  PAD_CTRL_PORT_SQI_MOSI,
  PAD_CTRL_PORT_SQI_MISO,
  PAD_CTRL_PORT_SQI_SIO2,
  PAD_CTRL_PORT_SQI_SIO3,
  PAD_CTRL_PORT_HIF_A0,
  PAD_CTRL_PORT_HIF_A1,
  PAD_CTRL_PORT_HIF_A2,
  PAD_CTRL_PORT_HIF_A3,
  PAD_CTRL_PORT_HIF_A4,
  PAD_CTRL_PORT_HIF_A5,
  PAD_CTRL_PORT_HIF_A6,
  PAD_CTRL_PORT_HIF_A7,
  PAD_CTRL_PORT_HIF_A8,
  PAD_CTRL_PORT_HIF_A9,
  PAD_CTRL_PORT_HIF_A10,
  PAD_CTRL_PORT_HIF_A11,
  PAD_CTRL_PORT_HIF_A12,
  PAD_CTRL_PORT_HIF_A13,
  PAD_CTRL_PORT_HIF_A14,
  PAD_CTRL_PORT_HIF_A15,
  PAD_CTRL_PORT_HIF_A16,
  PAD_CTRL_PORT_HIF_A17,
  PAD_CTRL_PORT_HIF_D0,
  PAD_CTRL_PORT_HIF_D1,
  PAD_CTRL_PORT_HIF_D2,
  PAD_CTRL_PORT_HIF_D3,
  PAD_CTRL_PORT_HIF_D4,
  PAD_CTRL_PORT_HIF_D5,
  PAD_CTRL_PORT_HIF_D6,
  PAD_CTRL_PORT_HIF_D7,
  PAD_CTRL_PORT_HIF_D8,
  PAD_CTRL_PORT_HIF_D9,
  PAD_CTRL_PORT_HIF_D10,
  PAD_CTRL_PORT_HIF_D11,
  PAD_CTRL_PORT_HIF_D12,
  PAD_CTRL_PORT_HIF_D13,
  PAD_CTRL_PORT_HIF_D14,
  PAD_CTRL_PORT_HIF_D15,
  PAD_CTRL_PORT_HIF_BHEN,
  PAD_CTRL_PORT_HIF_CSN,
  PAD_CTRL_PORT_HIF_RDN,
  PAD_CTRL_PORT_HIF_WRN,
  PAD_CTRL_PORT_HIF_RDY,
  PAD_CTRL_PORT_HIF_DIRQ,
  PAD_CTRL_PORT_HIF_SDCLK,
  PAD_CTRL_PORT_CNT /* used for plausibility check */
} PADCTRL_PORT_E;

typedef enum
{
  PADCTRL_PE_NONE  = 0,
  PADCTRL_PE_PU50K = 1,
  PADCTRL_PE_PD50K = 1
} PADCTRL_PE_E;

typedef enum
{
  PADCTRL_DS_4MA = 0,
  PADCTRL_DS_8MA = 1
} PADCTRL_DS_E;

typedef enum
{
  PADCTRL_RESULT_OK = 0,
  PADCTRL_RESULT_INVAL_PARAM
} PADCTRL_RESULT_E;

/* Function prototypes */
#ifndef HALDEC
#define HALDEC(name) name
#endif

PADCTRL_RESULT_E   HALDEC(PadCtrl_SetCfg)    ( const uint32_t* paulConfigTable, unsigned int uNumEntries );
uint32_t           HALDEC(PadCtrl_GetCfg)    ( PADCTRL_PORT_E  ePort );
PADCTRL_RESULT_E   HALDEC(PadCtrl_SetPullEn) ( PADCTRL_PORT_E ePort, bool fEn );

#define            PadCtrl_SetCfgTable(table)  PadCtrl_SetCfg(table, sizeof(table)/sizeof(table[0]))

#endif /* __HAL_PADCTRL_H */
